#!/bin/fish

function get_windows_of_workspace
    set workspace_number $argv[1]
    set window_of_workspace
    # look for each open window
    for n in (string split " " (xprop -root _NET_CLIENT_LIST) | string match -a "0x*" | string replace ',' '')
        set window_workspace (xprop -id $n _NET_WM_DESKTOP | awk {'print $3'})
        if string match -q $window_workspace $workspace_number
            if string match -q '*kitty*' (xprop -id $n WM_CLASS)
                set window_of_workspace $window_of_workspace (xprop -id $n WM_CLASS) (xprop -id $n WM_NAME)
            else
                set window_of_workspace $window_of_workspace (xprop -id $n WM_CLASS)
            end
        end
    end
    echo $window_of_workspace
end

function update_workspace_name
    set windows (get_windows_of_workspace $argv[1]  | string lower)

    #define priority list through the order of if / else ifs
    if string match -q '*firefox*' $windows
        berryc name_desktop $argv[1] firefox-$argv[1]
    else if string match -q '*chrom*' $windows
        berryc name_desktop $argv[1] chrome-$argv[1]
    else if string match -q '*mail*' $windows
        berryc name_desktop $argv[1] mail-$argv[1]
    else if string match -q -r 'spotify|spt' $windows
        berryc name_desktop $argv[1] spotify-$argv[1]
    else if string match -q '*zathura*' $windows or 
        berryc name_desktop $argv[1] pdf-$argv[1]
    else if string match -q '*kitty*' $windows
        berryc name_desktop $argv[1] terminal-$argv[1]
    else if string match -q '*discord*' $windows
        berryc name_desktop $argv[1] discord-$argv[1]        
    else
        berryc name_desktop $argv[1] $argv[1]
    end
end

set current_workspace (xprop -root _NET_CURRENT_DESKTOP | awk '{print $3}')

if string match -q 'switch_next' $argv[1]
    set target_workspace (string collect '(' $current_workspace '+1) % 10'| math)
    berryc switch_workspace $target_workspace
    update_workspace_name $current_workspace
    update_workspace_name $target_workspace
else if string match -q 'switch_previous' $argv[1]
    set target_workspace (string collect '(' $current_workspace '+9) % 10'| math)
    berryc switch_workspace $target_workspace
    update_workspace_name $current_workspace
    update_workspace_name $target_workspace
else if string match -q 'move_next' $argv[1]
    set target_workspace (string collect '(' $current_workspace '+1) % 10'| math)
    berryc send_to_workspace $target_workspace
    berryc switch_workspace $target_workspace
    update_workspace_name $current_workspace
    update_workspace_name $target_workspace
else if string match -q 'move_previous' $argv[1]
    set target_workspace (string collect '(' $current_workspace '+9) % 10'| math)
    berryc send_to_workspace $target_workspace
    berryc switch_workspace $target_workspace
    update_workspace_name $current_workspace
    update_workspace_name $target_workspace    
end
